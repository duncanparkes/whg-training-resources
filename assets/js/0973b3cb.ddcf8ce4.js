"use strict";(self.webpackChunkwhg_training_resources=self.webpackChunkwhg_training_resources||[]).push([[5456],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return d}});var i=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,i,r=function(t,e){if(null==t)return{};var n,i,r={},a=Object.keys(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=i.createContext({}),u=function(t){var e=i.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=u(t.components);return i.createElement(l.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},m=i.forwardRef((function(t,e){var n=t.components,r=t.mdxType,a=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),m=u(n),d=r,b=m["".concat(l,".").concat(d)]||m[d]||c[d]||a;return n?i.createElement(b,o(o({ref:e},p),{},{components:n})):i.createElement(b,o({ref:e},p))}));function d(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:r,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9949:function(t,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),o=["components"],s={},l=void 0,u={unversionedId:"statistical_modelling/Introduction/practicals/warmup/distributions warmup",id:"statistical_modelling/Introduction/practicals/warmup/distributions warmup",title:"distributions warmup",description:"Probability distribution questions",source:"@site/docs/statistical_modelling/Introduction/practicals/warmup/distributions warmup.md",sourceDirName:"statistical_modelling/Introduction/practicals/warmup",slug:"/statistical_modelling/Introduction/practicals/warmup/distributions warmup",permalink:"/whg-training-resources/statistical_modelling/Introduction/practicals/warmup/distributions warmup",draft:!1,editUrl:"https://github.com/whg-training/whg-training-resources/docs/statistical_modelling/Introduction/practicals/warmup/distributions warmup.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"O_bld_group_genome_wide_comparison",permalink:"/whg-training-resources/statistical_modelling/Introduction/practicals/o_bld_grp/O_bld_group_genome_wide_comparison"},next:{title:"estimating an allele frequency",permalink:"/whg-training-resources/statistical_modelling/Introduction/practicals/warmup/estimating an allele frequency"}},p={},c=[{value:"Probability distribution questions",id:"probability-distribution-questions",level:2},{value:"Exploring distributions",id:"exploring-distributions",level:3},{value:"Using distribution functions",id:"using-distribution-functions",level:3},{value:"Multivariate distributions.",id:"multivariate-distributions",level:3}],m={toc:c};function d(t){var e=t.components,s=(0,r.Z)(t,o);return(0,a.kt)("wrapper",(0,i.Z)({},m,s,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"probability-distribution-questions"},"Probability distribution questions"),(0,a.kt)("p",null,"The following can be solved using the ",(0,a.kt)("a",{target:"_blank",href:n(4702).Z},"distributions cheatsheet")," and the relevant functions in R."),(0,a.kt)("h3",{id:"exploring-distributions"},"Exploring distributions"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Question.")," Pick a distribution from the ",(0,a.kt)("a",{target:"_blank",href:n(4702).Z},"distributions cheatsheet")," and explore it using the ",(0,a.kt)("a",{parentName:"p",href:"https://ben18785.shinyapps.io/distribution-zoo/"},'"distributions zoo"'),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Question.")," Pick a distribution from the ",(0,a.kt)("a",{target:"_blank",href:n(4702).Z},"distributions cheatsheet")," and plot its pdf and its cdf for a few different parameter values using R."),(0,a.kt)("h3",{id:""}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Question.")," What is the mean and variance of a binomial variable (like a coin toss) with parameters ",(0,a.kt)("em",{parentName:"p"},"n")," (number of trials) and ",(0,a.kt)("em",{parentName:"p"},"p")," (success probability?)"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Hint.")," A binomial variable is a sum of ",(0,a.kt)("em",{parentName:"p"},"n")," Bernoulli variables (i.e. single coin tosses).  And the ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Variance#Basic_properties"},"variance of a sum of independent variables is the sum of the variances")," (and similarly for the mean).  So you only need to work it out for a single trial and add up."),(0,a.kt)("h3",{id:"using-distribution-functions"},"Using distribution functions"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Question.")," I toss a coin 100 times.  What's the chance I see at least 60 heads?"),(0,a.kt)("h3",{id:"multivariate-distributions"},"Multivariate distributions."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Question.")," Plot a multivariate normal distribution density using using R."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Hint.")," This can be done using the ",(0,a.kt)("inlineCode",{parentName:"p"},"mvtnorm")," package and the ",(0,a.kt)("inlineCode",{parentName:"p"},"ellipse")," package.  Here is one way using base R graphics - try experimenting with different covariances:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\nplot_bivariate_gaussian <- function(\n  mean = c( 0, 0 ),\n  covariance = matrix(\n    c(\n      1.0, 0.5,\n      0.5, 1.0\n    ),\n    nrow = 2\n  )\n) {\n  library( mvtnorm )\n  library( ellipse )\n\n  # generate some samples\n  samples = as.data.frame( rmvnorm( 1000, mean = mean, sigma = covariance ))\n  colnames(samples) = c( \"x\", \"y\" )\n\n  # Generate a blank plot\n  range = c( -5, 5 )\n  plot( 0, 0, col = 'white', xlim = range, ylim = range, bty = 'n' )\n\n  # Plot the samples\n  points(\n    samples$x, samples$y,\n    col = rgb( 0, 0, 0, 0.2 ),  # use transparent black\n    pch = 19,                   # small round filled dots\n    cex = 0.75                  # make points 75% of default size\n  )\n\n  # Plot quantiles as contours\n  for( quantile in c( 0.95, 0.75, 0.5, 0.25, 0.05 )) {\n      e = ellipse( covariance, centre = mean, level = quantile )\n      points( e[,1], e[,2], type = 'l', col = 'red', lwd = 2 )\n  }\n  # draw some grid lines etc.\n  grid()\n  abline( h = 0, col = rgb( 0, 0, 0, 0.2 ) )\n  abline( v = 0, col = rgb( 0, 0, 0, 0.2 ) )\n}\n\nplot_bivariate_gaussian(\n  mean = c( 0, 0 ),\n  covariance = matrix( c( 1, 0.5, 0.5, 1 ), nrow = 2 )\n)\n\n")),(0,a.kt)("p",null,"Another way to do this would use ",(0,a.kt)("inlineCode",{parentName:"p"},"ggplot2"),"'s ",(0,a.kt)("inlineCode",{parentName:"p"},"geom_bin2d()")," to show a 2d histogram:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"library( ggplot2 )\n# (using samples as in the functino above)\nggplot2( data = samples, mapping = aes( x = x, y = y )) + geom_bin2d()\n")),(0,a.kt)("p",null,"What happens as you change the mean and/or the covariance?  (Note: the covariance matrix must have positive diagonal entries: these are the variances of ",(0,a.kt)("em",{parentName:"p"},"x")," and ",(0,a.kt)("em",{parentName:"p"},"y"),".  And it must be ",(0,a.kt)("strong",{parentName:"p"},"symmetric"),", i.e it should have the same value in the upper-right and lower-left entries.  This value is the ",(0,a.kt)("em",{parentName:"p"},"covariance")," between ",(0,a.kt)("em",{parentName:"p"},"x")," and ",(0,a.kt)("em",{parentName:"p"},"y"),".)"),(0,a.kt)("p",null,"What do you notice about the contours?"))}d.isMDXComponent=!0},4702:function(t,e,n){e.Z=n.p+"assets/files/Distributions cheatsheet-cc4e21d39d4e4e0af58815c6c5bc670b.pdf"}}]);