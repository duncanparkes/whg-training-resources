"use strict";(self.webpackChunkwhg_training_resources=self.webpackChunkwhg_training_resources||[]).push([[7068],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),g=a,f=u["".concat(s,".").concat(g)]||u[g]||d[g]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6021:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={},s=void 0,c={unversionedId:"statistical_modelling/Introduction/practicals/linear_regression/atp2b4/atp2b4_practical",id:"statistical_modelling/Introduction/practicals/linear_regression/atp2b4/atp2b4_practical",title:"atp2b4_practical",description:"Linear regression practical for ATP2B4 expression data",source:"@site/docs/statistical_modelling/Introduction/practicals/linear_regression/atp2b4/atp2b4_practical.md",sourceDirName:"statistical_modelling/Introduction/practicals/linear_regression/atp2b4",slug:"/statistical_modelling/Introduction/practicals/linear_regression/atp2b4/atp2b4_practical",permalink:"/whg-training-resources/statistical_modelling/Introduction/practicals/linear_regression/atp2b4/atp2b4_practical",draft:!1,editUrl:"https://github.com/whg-training/whg-training-resources/docs/statistical_modelling/Introduction/practicals/linear_regression/atp2b4/atp2b4_practical.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Bayesian meta-analysis practical",permalink:"/whg-training-resources/statistical_modelling/Introduction/practicals/bayesian_meta_analysis/bayesian_meta_analysis_practical"},next:{title:"simulated_linear_model_practical",permalink:"/whg-training-resources/statistical_modelling/Introduction/practicals/linear_regression/atp2b4/simulated_linear_model_practical"}},p={},d=[{value:"Linear regression practical for <em>ATP2B4</em> expression data",id:"linear-regression-practical-for-atp2b4-expression-data",level:2},{value:"Fitting a regression model",id:"fitting-a-regression-model",level:3},{value:"getting the stage",id:"getting-the-stage",level:3}],u={toc:d};function g(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"linear-regression-practical-for-atp2b4-expression-data"},"Linear regression practical for ",(0,i.kt)("em",{parentName:"h2"},"ATP2B4")," expression data"),(0,i.kt)("p",null,"In this part of the practical we will use linear regression to estimate the possible effect of a\ngenotype on gene expression values. The data is in the file ",(0,i.kt)("inlineCode",{parentName:"p"},"atp2b4_data.tsv")," - load it now:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note.")," I am using the ",(0,i.kt)("a",{parentName:"p",href:"https://www.tidyverse.org"},"tidyverse")," for these examples. If you don't\nhave it installed, either install it or use base R (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"read.csv()"),") instead."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"library( tidyverse )\ndata = read_delim( 'atp2b4_data.tsv', delim = \"\\t\" )\n")),(0,i.kt)("p",null,"The data represents gene expression values (expressed as the mean per-site coverage of RNA-seq sequencing reads, divided by the total number of reads for the sample, in the column ",(0,i.kt)("inlineCode",{parentName:"p"},"normalised_covrage"),") for the gene ",(0,i.kt)("em",{parentName:"p"},"ATP2B4"),".  The data comes from ",(0,i.kt)("a",{parentName:"p",href:"https://doi.org/10.1172/JCI94378"},"this paper")," which reported that local genotypes - including at the SNP rs1419114 - are associated with expression changes.  Let's see if we can reconstruct this."),(0,i.kt)("p",null,"First let's rename the genotype column - too long!"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'colnames(data)[3] = "genotype"\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Question.")," what does the data look like?  How many samples?  How many of each genotype?"),(0,i.kt)("h3",{id:"fitting-a-regression-model"},"Fitting a regression model"),(0,i.kt)("p",null,"Fit a linear model:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"fit = lm( normalised_coverage ~ genotype, data = data )\ncoeffs = summary(fit)$coef\n")),(0,i.kt)("p",null,"Let's plot:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"plot(\n  data$genotype,\n  data$normalised_coverage,\n  pch = 19,\n  xlab = \"rs1419114 genotype\",\n  ylab = \"normalised_coverage\",\n  bty = 'n'\n)\nabline( coef = coeffs[,1], col = 'red', lwd = 2 )\nabline( coef = coeffs[,1] - 1.96 * c( 0, coeffs[2,2] ), col = 'red', lty = 2, lwd = 1 )\nabline( coef = coeffs[,1] + 1.96 * c( 0, coeffs[2,2] ), col = 'red', lty = 2, lwd = 1 )\n")),(0,i.kt)("p",null,"And let's plot the residuals:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"lm.qqplot( fit )\n")),(0,i.kt)("p",null,"Hmm.  It's kind of ok."),(0,i.kt)("p",null,"If you look at the coefficients you'll see something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"> coeffs\n             Estimate Std. Error  t value   Pr(>|t|)\n(Intercept) 12.165760   4.785387 2.542273 0.01856574\ngenotype     4.395767   2.842943 1.546203 0.13632062\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Question.")," What does that mean?"),(0,i.kt)("p",null,"Hmm, this regression thinks there is a +ve effect of genotype on expression (4.4).  But the error interval is also wide (standard deviation of 2.8)."),(0,i.kt)("h3",{id:"getting-the-stage"},"getting the stage"),(0,i.kt)("p",null,"However, this data was collected from two types of erythrocytes: fetal and adult.  Does adding that change the picture?"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"fit.with.stage = lm( normalised_coverage ~ stage + genotype, data = data )\ncoeffs.with.stage = summary(fit.with.stage)$coef\n\nplot(\n  data$genotype,\n  data$normalised_coverage,\n  pch = 19,\n  xlab = \"rs1419114 genotype\",\n  ylab = \"normalised_coverage\",\n  bty = 'n'\n)\nabline( coef = coeffs.with.stage[c(1,3),1], col = 'red', lwd = 2 )\n\nlm.qqplot( fit.with.stage )\n\n# compare the coefficients:\nprint( coeffs.with.stage )\nprint( coeffs )\n")),(0,i.kt)("p",null,"Suddenly things look different!"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Question.")," Interpret these results.  What effect does ",(0,i.kt)("inlineCode",{parentName:"p"},"stage")," have?  Which qq-plot looks better?"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Question.")," which model (with stage or without) has a higher likelihood?  (Breaking my rule of not introducing P-values yet... you can do a 'likelihood ratio test':"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"# Compute likelihood ratio test statistic from log-likelihoods\nlog.lr = 2 * ( logLik( fit.with.stage ) - logLik( fit ))\n\n# log.lr should be chi-square distributed if stage wasn't important\npchisq( log.lr, df = 1, lower.tail = F )\n")),(0,i.kt)("p",null,"So stage substantially (and significantly) improves the model fit."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Question.")," If we put stage in, we get a strong genotype effect (3.5 standard deviations from zero).  If we don't put stage in, we get a much weaker effect. How do we know if we should include stage in the regression or not?"))}g.isMDXComponent=!0}}]);