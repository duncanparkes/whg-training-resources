"use strict";(self.webpackChunkwhg_training_resources=self.webpackChunkwhg_training_resources||[]).push([[8485],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return c}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var g=r.createContext({}),u=function(e){var n=r.useContext(g),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(g.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,g=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=u(t),c=o,h=m["".concat(g,".").concat(c)]||m[c]||p[c]||i;return t?r.createElement(h,a(a({ref:n},l),{},{components:t})):r.createElement(h,a({ref:n},l))}));function c(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var s={};for(var g in n)hasOwnProperty.call(n,g)&&(s[g]=n[g]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6457:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return g},default:function(){return c},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],s={sidebar_position:13},g=void 0,u={unversionedId:"programming/programming_with_gene_annotations/Visualisation",id:"programming/programming_with_gene_annotations/Visualisation",title:"Visualisation",description:"Up to table of contents",source:"@site/docs/programming/programming_with_gene_annotations/Visualisation.md",sourceDirName:"programming/programming_with_gene_annotations",slug:"/programming/programming_with_gene_annotations/Visualisation",permalink:"/whg-training-resources/programming/programming_with_gene_annotations/Visualisation",draft:!1,editUrl:"https://github.com/whg-training/whg-training-resources/docs/programming/programming_with_gene_annotations/Visualisation.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Scaling_up",permalink:"/whg-training-resources/programming/programming_with_gene_annotations/Scaling_up"},next:{title:"Closing_thoughts",permalink:"/whg-training-resources/programming/programming_with_gene_annotations/Closing_thoughts"}},l={},p=[{value:"A note on visualisation",id:"a-note-on-visualisation",level:2}],m={toc:p};function c(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/whg-training-resources/programming/programming_with_gene_annotations/"},"Up to table of contents")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/whg-training-resources/programming/programming_with_gene_annotations/Scaling_up"},"Back to the previous page")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/whg-training-resources/programming/programming_with_gene_annotations/Closing_thoughts"},"Go to the next page")),(0,i.kt)("h2",{id:"a-note-on-visualisation"},"A note on visualisation"),(0,i.kt)("p",null,"It would be very nice to plot some of the values we've computed! For example - gene length versus\nnumber of exons, or gene length versus number of transcripts, or genome size versus number of\ngenes, and so on."),(0,i.kt)("p",null,"Data visualisation is really beyond the scope of this tutorial. However, as a quick example, here\nis how you might plot some of these values in R using ",(0,i.kt)("a",{parentName:"p",href:"https://ggplot2.tidyverse.org"},"ggplot2"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'library( RSQLite )\nlibrary( ggplot2 )\ndb = DBI::dbConnect( RSQLite::SQLite(), "genes.sqlite" )\ndata = dbGetQuery( db, "SELECT * FROM gene_summary_view" )\ndata$length = data$end - data$start + 1\np = (\n   ggplot( data = data )\n   + geom_point( aes( x = end - start + 1, y = average_number_of_exons, col = analysis ))\n   + xlab( "Gene length" )\n   + ylab( "Number of exons" )\n)\n\nggsave( p, file = "gene_length_versus_number_of_exons.pdf", width = 8, height = 5 )\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"In python, you could instead try using  [matplotlib](https://matplotlib.org). I'd like to\ninclude a matplotlib example here but don't have one - let me know if you write one!\n\n## Conclusion\n\nThat's the end of this tutorial!  You can read some [closing thoughts](Closing_thoughts.md).\n")))}c.isMDXComponent=!0}}]);