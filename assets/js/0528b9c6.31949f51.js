"use strict";(self.webpackChunkwhg_training_resources=self.webpackChunkwhg_training_resources||[]).push([[1070],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),g=u(n),d=i,f=g["".concat(l,".").concat(d)]||g[d]||c[d]||a;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},6778:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],s={},l=void 0,u={unversionedId:"next_generation_sequencing/Building an NGS processing pipeline/Introduction",id:"next_generation_sequencing/Building an NGS processing pipeline/Introduction",title:"Introduction",description:"Next generation sequence data processing tutorial",source:"@site/docs/next_generation_sequencing/Building an NGS processing pipeline/Introduction.md",sourceDirName:"next_generation_sequencing/Building an NGS processing pipeline",slug:"/next_generation_sequencing/Building an NGS processing pipeline/Introduction",permalink:"/whg-training-resources/next_generation_sequencing/Building an NGS processing pipeline/Introduction",draft:!1,editUrl:"https://github.com/whg-training/whg-training-resources/docs/next_generation_sequencing/Building an NGS processing pipeline/Introduction.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Building an NGS data processing pipeline",permalink:"/whg-training-resources/next_generation_sequencing/Building an NGS processing pipeline/"},next:{title:"Required software",permalink:"/whg-training-resources/next_generation_sequencing/Building an NGS processing pipeline/Required software"}},p={},c=[{value:"Next generation sequence data processing tutorial",id:"next-generation-sequence-data-processing-tutorial",level:2},{value:"Getting setup",id:"getting-setup",level:2},{value:"Required software.",id:"required-software",level:3},{value:"Obtaining the data",id:"obtaining-the-data",level:3},{value:"Getting started",id:"getting-started",level:2}],g={toc:c};function d(e){var t=e.components,s=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},g,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"next-generation-sequence-data-processing-tutorial"},"Next generation sequence data processing tutorial"),(0,a.kt)("p",null,"In this tutorial / practical we are asking you to bring a set of ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/FASTQ_format"},"FASTQ\nfiles")," representing reads from an Illumina sequencing\nplatform through a basic sequence data processing pipeline. You will have to QC and align the\nreads, identify or remove duplicate reads, compute coverage and - optionally generate an initial set of variant calls."),(0,a.kt)("h2",{id:"getting-setup"},"Getting setup"),(0,a.kt)("h3",{id:"required-software"},"Required software."),(0,a.kt)("p",null,"You will need lots of software to implement this pipeline!  Before starting the tutorial please visit the ",(0,a.kt)("a",{parentName:"p",href:"/whg-training-resources/next_generation_sequencing/Building%20an%20NGS%20processing%20pipeline/Required_software"},"Required software page")," and make sure you can install the needed pieces."),(0,a.kt)("h3",{id:"obtaining-the-data"},"Obtaining the data"),(0,a.kt)("p",null,"This tutorial will start with a set of fastq files representing ",(0,a.kt)("em",{parentName:"p"},"P.falciparum")," (malaria) sequence reads from 5 samples.  The data comes from the ",(0,a.kt)("a",{parentName:"p",href:"https://www.malariagen.net/resource/26"},"MalariaGEN Pf6 open resource")," (described further in the ",(0,a.kt)("a",{parentName:"p",href:"https://wellcomeopenresearch.org/articles/6-42"},"corresponding publication")," and is publicly available via the ",(0,a.kt)("a",{parentName:"p",href:"https://www.ebi.ac.uk/ena/browser/home"},"European Nucleotide Archive"),"."),(0,a.kt)("p",null,"To get the data you have two options:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Download the full FASTQ files from the ENA.  The relevant links are provided in ",(0,a.kt)("a",{target:"_blank",href:n(6437).Z},(0,a.kt)("code",null,"samples.tsv")),".  The full data is around 12Gb.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"To reduce the computational and space requirements for this tutorial, I created a lower depth version of the same data.  You can download these files from ",(0,a.kt)("a",{parentName:"p",href:"https://www.well.ox.ac.uk/~gav/projects/gms/statistics-course/Next_Generation_Sequencing/practicals/ngs_processing_pipeline/data/reads/subsampled/"},"this link"),".  The sub-sampled data is around 2Gb."))),(0,a.kt)("p",null,"It's up to you which version of data you want to try to process.  We recommend to put the fastq files in a subfolder of your working folder, say ",(0,a.kt)("inlineCode",{parentName:"p"},"data/reads/"),"."),(0,a.kt)("p",null,"You will also need the reference sequence to align to - we will use ",(0,a.kt)("inlineCode",{parentName:"p"},"Pf3D7_v3")," which you can find ",(0,a.kt)("a",{parentName:"p",href:"https://www.well.ox.ac.uk/~gav/projects/gms/statistics-course/Next_Generation_Sequencing/practicals/ngs_processing_pipeline/data/reference/"},"here"),".  Put this in another subfolder, say ",(0,a.kt)("inlineCode",{parentName:"p"},"data/reference/"),"."),(0,a.kt)("h2",{id:"getting-started"},"Getting started"),(0,a.kt)("p",null,"When you're ready, go the the ",(0,a.kt)("a",{parentName:"p",href:"/whg-training-resources/next_generation_sequencing/Building%20an%20NGS%20processing%20pipeline/pipeline"},"pipeline page"),"."))}d.isMDXComponent=!0},6437:function(e,t,n){t.Z=n.p+"assets/files/samples-292d1294c8bf425345c8526157c218da.tsv"}}]);